{"title":"npm 包开发流程","uid":"642d5527a23c1a254ea2226d6952428e","slug":"npm-package","date":"2023-12-01T10:03:07.000Z","updated":"2023-12-20T10:09:10.426Z","comments":true,"path":"api/articles/npm-package.json","keywords":null,"cover":null,"content":"<h2 id=\"Eslint、stylelint配置包开发\"><a href=\"#Eslint、stylelint配置包开发\" class=\"headerlink\" title=\"Eslint、stylelint配置包开发\"></a>Eslint、stylelint配置包开发</h2><p>编写对应依赖配置的npm包，之后发版到公司私有仓库下，由其他项目下载引入使用。公司统一npm包配置流程：</p>\n<ol>\n<li><p>设置npm镜像源为默认仓库<br>使用命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> registry https://xxx(镜像源url)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>登录npm仓库<br>使用 <code>npm login</code> 命令，输入账号，密码，邮箱完成登录</p>\n</li>\n<li><p>初始化npm包<br>使用 <code>npm init</code> 命令初始化 npm 包，根据终端提示构建 package.json 文件。</p>\n</li>\n<li><p>编写npm包<br>根据个人需求编写组件代码，可能引入其他依赖等。</p>\n</li>\n<li><p>编写测试用例<br>项目中编写测试用例，测试编写内容是否有效</p>\n</li>\n<li><p>编写README.md文档<br>编写该文档来说明该包的使用方法。</p>\n</li>\n<li><p>发布 npm 包<br>首先根目录写一个<code>.npmrc</code>文件，在文件中指定@it-fe域下包的对应地址，编写如下内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@it-fe:registry=https://xxx(镜像源url)</span><br></pre></td></tr></table></figure>\n\n<p>之后使用 <code>npm publish</code> 命令发布</p>\n</li>\n<li><p>在其他项目下载并引入该包查看是否可以使用</p>\n</li>\n</ol>\n<h2 id=\"ls-lint配置包问题解决方案\"><a href=\"#ls-lint配置包问题解决方案\" class=\"headerlink\" title=\"ls-lint配置包问题解决方案\"></a>ls-lint配置包问题解决方案</h2><p>协助开发ls-lint配置包时发现了特殊情况，使用之前的开发方法错误的，别的项目引入配置包后检测不到ls-lint这个命令。经过多次实验查找问题怀疑可能跟ls-lint设计与eslint等有区别，导致ls-lint间接引用的话，命令没有被正确导出到.bin目录。由此提出解决方案为，在配置包写一个node脚本，别的项目通过执行脚本的方式间接执行ls-lint命令。需要额外操作的步骤如下：<br>a. 编写一个node脚本运行想要运行的命令（以下为ls-lint的例子）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/usr/bin/env node</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; execSync &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;child_process&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> lsLintPath = path.<span class=\"title function_\">join</span>(__dirname, <span class=\"string\">&#x27;node_modules&#x27;</span>, <span class=\"string\">&#x27;.bin&#x27;</span>, <span class=\"string\">&#x27;ls-lint&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> result = <span class=\"title function_\">execSync</span>(<span class=\"string\">`<span class=\"subst\">$&#123;lsLintPath&#125;</span>`</span>).<span class=\"title function_\">toString</span>();</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result);</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (error) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// `error.message` should contain the output of the `ls-lint` command.</span></span><br><span class=\"line\">  <span class=\"comment\">// console.error(error.message);</span></span><br><span class=\"line\">  process.<span class=\"title function_\">exit</span>(<span class=\"number\">1</span>); <span class=\"comment\">// Exit with an error status code.</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>b. 在package.json文件中添加bin字段，设置命令引入js脚本文件（以下为ls-lint的例子）</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;bin&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;ls-lint&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;./ls-lint.js&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n","feature":true,"text":"Eslint、stylelint配置包开发编写对应依赖配置的npm包，之后发版到公司私有仓库下，由其他项目下载引入使用。公司统一npm包配置流程： 设置npm镜...","permalink":"/post/npm-package","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"前端技术","slug":"前端技术","count":3,"path":"api/categories/前端技术.json"}],"tags":[{"name":"npm","slug":"npm","count":1,"path":"api/tags/npm.json"},{"name":"eslint","slug":"eslint","count":1,"path":"api/tags/eslint.json"},{"name":"stylelint","slug":"stylelint","count":1,"path":"api/tags/stylelint.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Eslint%E3%80%81stylelint%E9%85%8D%E7%BD%AE%E5%8C%85%E5%BC%80%E5%8F%91\"><span class=\"toc-text\">Eslint、stylelint配置包开发</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ls-lint%E9%85%8D%E7%BD%AE%E5%8C%85%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">ls-lint配置包问题解决方案</span></a></li></ol>","author":{"name":"lzh","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"构建管理 menorepo","uid":"848e7f65f11be9c581f104a5e89cadaa","slug":"menorepo","date":"2023-12-10T04:00:00.000Z","updated":"2023-12-20T10:37:40.973Z","comments":true,"path":"api/articles/menorepo.json","keywords":null,"cover":null,"text":"使用 pnpm 管理 workspace 下载 pnpm, 安装 father-build 12npm install -g pnpmpnpm i -D fat...","permalink":"/post/menorepo","photos":[],"count_time":{"symbolsCount":505,"symbolsTime":"1 mins."},"categories":[{"name":"前端技术","slug":"前端技术","count":3,"path":"api/categories/前端技术.json"}],"tags":[{"name":"pnpm","slug":"pnpm","count":1,"path":"api/tags/pnpm.json"},{"name":"menorepo","slug":"menorepo","count":1,"path":"api/tags/menorepo.json"},{"name":"changesets","slug":"changesets","count":1,"path":"api/tags/changesets.json"}],"author":{"name":"lzh","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{}}